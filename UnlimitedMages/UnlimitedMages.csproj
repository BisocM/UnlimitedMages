<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <MageArenaPath>C:\Program Files (x86)\Steam\steamapps\common\Mage Arena</MageArenaPath>

        <TargetFramework>netstandard2.1</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <LangVersion>default</LangVersion>
    </PropertyGroup>

    <ItemGroup>
        <Reference Include="0Harmony">
            <HintPath>$(MageArenaPath)\BepInEx\core\0Harmony.dll</HintPath>
        </Reference>
        <Reference Include="Assembly-CSharp">
            <HintPath>$(MageArenaPath)\MageArena_Data\Managed\Assembly-CSharp.dll</HintPath>
        </Reference>
        <Reference Include="BepInEx">
            <HintPath>$(MageArenaPath)\BepInEx\core\BepInEx.dll</HintPath>
        </Reference>
        <Reference Include="com.rlabrecque.steamworks.net">
            <HintPath>$(MageArenaPath)\MageArena_Data\Managed\com.rlabrecque.steamworks.net.dll</HintPath>
        </Reference>
        <Reference Include="DissonanceVoip">
            <HintPath>$(MageArenaPath)\MageArena_Data\Managed\DissonanceVoip.dll</HintPath>
        </Reference>
        <Reference Include="DissonanceVoip.FishNet">
            <HintPath>$(MageArenaPath)\MageArena_Data\Managed\DissonanceVoip.FishNet.dll</HintPath>
        </Reference>
        <Reference Include="FishNet.Runtime">
            <HintPath>$(MageArenaPath)\MageArena_Data\Managed\FishNet.Runtime.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine">
            <HintPath>$(MageArenaPath)\MageArena_Data\Managed\UnityEngine.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.CoreModule">
            <HintPath>$(MageArenaPath)\MageArena_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.UI">
            <HintPath>$(MageArenaPath)\MageArena_Data\Managed\UnityEngine.UI.dll</HintPath>
        </Reference>
    </ItemGroup>

    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <Deterministic>true</Deterministic>
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
        <PathMap>$(MSBuildThisFileDirectory)=/src/</PathMap>
    </PropertyGroup>

    <Target Name="PackageForThunderstore" AfterTargets="Build" Condition=" '$(Configuration)' == 'Release' ">

        <PropertyGroup>
            <ModName>UnlimitedMages</ModName>
            <PackageDir>$(TargetDir)</PackageDir>
            <StagingDir>$(TargetDir)staging</StagingDir>
        </PropertyGroup>

        <Message Text="⚡ Packaging for Thunderstore..." Importance="high"/>

        <RemoveDir Directories="$(StagingDir)"/>

        <MakeDir Directories="$(StagingDir)/plugins"/>

        <ItemGroup>
            <PackageFiles Include="$(ProjectDir)..\manifest.json"/>
            <PackageFiles Include="$(ProjectDir)..\icon.png"/>
            <PackageFiles Include="$(ProjectDir)..\README.md"/>
        </ItemGroup>
        <Copy SourceFiles="@(PackageFiles)" DestinationFolder="$(StagingDir)"/>

        <Copy SourceFiles="$(TargetPath)" DestinationFolder="$(StagingDir)/plugins"/>

        <ReadLinesFromFile File="$(ProjectDir)..\manifest.json">
            <Output TaskParameter="Lines" ItemName="ManifestLines"/>
        </ReadLinesFromFile>

        <ItemGroup>
            <VersionLineItem Include="@(ManifestLines)" Condition="$([System.String]::new('%(Identity)').Contains('version_number'))"/>
        </ItemGroup>

        <PropertyGroup>
            <PackageVersion>$([System.String]::new('%(VersionLineItem.Identity)').Split('"')[3])</PackageVersion>
        </PropertyGroup>

        <ZipDirectory
                SourceDirectory="$(StagingDir)"
                DestinationFile="$(PackageDir)$(ModName)-$(PackageVersion).zip"
                Overwrite="true"/>

        <RemoveDir Directories="$(StagingDir)"/>

        <Message Text="✔️ Successfully created package at $(PackageDir)$(ModName)-$(PackageVersion).zip" Importance="high"/>
    </Target>

</Project>